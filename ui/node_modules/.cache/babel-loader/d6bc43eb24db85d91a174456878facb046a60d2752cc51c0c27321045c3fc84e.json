{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\GitHub\\\\productivity-logger\\\\ui\\\\src\\\\Components\\\\Stopwatch.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport SaveAltRoundedIcon from '@mui/icons-material/SaveAltRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  stopwatchTime: {\n    fontSize: \"30px\",\n    width: \"100px\",\n    height: \"20px\",\n    marginTop: \"40px\",\n    marginRight: \"20px\"\n  },\n  button: {\n    margin: \"20px\",\n    border: \"none\",\n    padding: \"10px 30px\",\n    cursor: \"pointer\",\n    color: \"orange\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\nconst Stopwatch = _ref => {\n  _s();\n  let {\n    title\n  } = _ref;\n  const style = useStyles();\n  const [time, setTime] = React.useState(0);\n  const [isRunning, setIsRunning] = React.useState(false);\n  const [record, setRecord] = React.useState({\n    endTime: \"\",\n    time: \"\",\n    title: \"\"\n  });\n  React.useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => setTime(time + 1), 10);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, time]);\n  const hour = Math.floor(time / 360000);\n  const minute = Math.floor(time % 360000 / 6000);\n  const seconds = Math.floor(time % 6000 / 100);\n  const startAndStop = () => {\n    setIsRunning(!isRunning);\n  };\n  const Save = () => {\n    const presentTime = new Date();\n    setRecord({\n      time: time,\n      title: title,\n      endTime: presentTime.getTime()\n    });\n    console.log(time, title, presentTime.getTime());\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: style.stopwatchTime,\n      children: [hour.toString().padStart(2, \"0\"), \":\", minute.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"30px 3px 0px 5px\",\n        display: \"flex\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: startAndStop,\n        children: isRunning ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: Save,\n        color: \"secondary\",\n        size: \"100px\",\n        children: /*#__PURE__*/_jsxDEV(SaveAltRoundedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n_s(Stopwatch, \"eNCZmzjQZ6+132mbz8ItsAsnBFA=\", false, function () {\n  return [useStyles];\n});\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","Button","makeStyles","IconButton","PlayArrowIcon","PauseIcon","SaveAltRoundedIcon","jsxDEV","_jsxDEV","useStyles","stopwatchTime","fontSize","width","height","marginTop","marginRight","button","margin","border","padding","cursor","color","display","justifyContent","Stopwatch","_ref","_s","title","style","time","setTime","useState","isRunning","setIsRunning","record","setRecord","endTime","useEffect","interval","setInterval","clearInterval","hour","Math","floor","minute","seconds","startAndStop","Save","presentTime","Date","getTime","console","log","children","className","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Documents/GitHub/productivity-logger/ui/src/Components/Stopwatch.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport SaveAltRoundedIcon from '@mui/icons-material/SaveAltRounded';\r\n\r\nconst useStyles = makeStyles({\r\n    stopwatchTime: {\r\n       fontSize: \"30px\",\r\n       width: \"100px\",\r\n       height: \"20px\",\r\n       marginTop: \"40px\",\r\n       marginRight: \"20px\"\r\n    },\r\n    button: {\r\n        margin: \"20px\",\r\n        border: \"none\",\r\n        padding: \"10px 30px\",\r\n        cursor: \"pointer\",\r\n        color: \"orange\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    }\r\n})\r\n\r\nconst Stopwatch = ({title}) => {\r\n    const style = useStyles();\r\n    const [time, setTime] = React.useState(0);\r\n    const [isRunning, setIsRunning] = React.useState(false);\r\n    const [record, setRecord] = React.useState({\r\n        endTime: \"\",\r\n        time: \"\",\r\n        title: \"\",\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        let interval;\r\n        if (isRunning){\r\n            interval = setInterval(() => setTime(time+1),10);\r\n        }\r\n        return () => clearInterval(interval);\r\n    },[isRunning, time]);\r\n\r\n    const hour = Math.floor(time / 360000);\r\n    const minute = Math.floor((time % 360000)/6000);\r\n    const seconds = Math.floor((time% 6000)/100);\r\n\r\n    const startAndStop = () => {\r\n        setIsRunning(!isRunning);\r\n    }\r\n\r\n    const Save = () => {\r\n        const presentTime = new Date();\r\n        setRecord({\r\n            time: time,\r\n            title: title,\r\n            endTime: presentTime.getTime(),\r\n        })\r\n        console.log(time,title,presentTime.getTime())\r\n        setTime(0);\r\n    }\r\n\r\n   return (\r\n      <div style={{display: \"flex\"}}>\r\n      <p className={style.stopwatchTime}>\r\n      {hour.toString().padStart(2, \"0\")}:{minute.toString().padStart(2, \"0\")}:\r\n      {seconds.toString().padStart(2, \"0\")}\r\n      </p>\r\n       <div style={{margin: \"30px 3px 0px 5px\", display: \"flex\"}}>\r\n            <IconButton onClick={startAndStop}>\r\n            {isRunning ? \r\n                <PauseIcon  color=\"primary\"/> :\r\n                <PlayArrowIcon   color=\"primary\"/>}\r\n            </IconButton>\r\n            <IconButton onClick={Save} color=\"secondary\" size=\"100px\">\r\n               <SaveAltRoundedIcon/>\r\n            </IconButton>\r\n        </div>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default Stopwatch;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}