{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Documents\\\\GitHub\\\\productivity-logger\\\\ui\\\\src\\\\Components\\\\Stopwatch.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport { IconButton } from \"@material-ui/core\";\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  stopwatchTime: {\n    backgroundColor: \"yellow\",\n    width: \"100px\",\n    height: \"20px\",\n    marginTop: \"40px\"\n  },\n  button: {\n    margin: \"20px\",\n    border: \"none\",\n    padding: \"10px 30px\",\n    cursor: \"pointer\",\n    color: \"orange\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n});\nconst Stopwatch = () => {\n  _s();\n  const style = useStyles();\n  const [time, setTime] = React.useState(0);\n  const [isRunning, setIsRunning] = React.useState(false);\n  React.useEffect(() => {\n    let interval;\n    if (isRunning) {\n      interval = setInterval(() => setTime(time + 1), 10);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning, time]);\n  const hour = Math.floor(time / 360000);\n  const minute = Math.floor(time % 360000 / 6000);\n  const seconds = Math.floor(time % 6000 / 100);\n  const startAndStop = () => {\n    setIsRunning(!isRunning);\n  };\n  const Save = () => {\n    setTime(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: style.stopwatchTime,\n      children: [hour, \":\", minute.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"30px 3px 0px 5px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: isRunning ? /*#__PURE__*/_jsxDEV(PauseIcon, {\n          onClick: startAndStop,\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {\n          onClick: startAndStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n_s(Stopwatch, \"MQEfg5JMaveYQ7UcuFRLqqbXWAo=\", false, function () {\n  return [useStyles];\n});\n_c = Stopwatch;\nexport default Stopwatch;\nvar _c;\n$RefreshReg$(_c, \"Stopwatch\");","map":{"version":3,"names":["React","Button","makeStyles","IconButton","PlayArrowIcon","PauseIcon","jsxDEV","_jsxDEV","useStyles","stopwatchTime","backgroundColor","width","height","marginTop","button","margin","border","padding","cursor","color","display","justifyContent","Stopwatch","_s","style","time","setTime","useState","isRunning","setIsRunning","useEffect","interval","setInterval","clearInterval","hour","Math","floor","minute","seconds","startAndStop","Save","children","className","toString","padStart","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Documents/GitHub/productivity-logger/ui/src/Components/Stopwatch.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\n\r\nconst useStyles = makeStyles({\r\n    stopwatchTime: {\r\n       backgroundColor: \"yellow\",\r\n       width: \"100px\",\r\n       height: \"20px\",\r\n       marginTop: \"40px\"\r\n    },\r\n    button: {\r\n        margin: \"20px\",\r\n        border: \"none\",\r\n        padding: \"10px 30px\",\r\n        cursor: \"pointer\",\r\n        color: \"orange\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    }\r\n})\r\n\r\nconst Stopwatch = () => {\r\n    const style = useStyles();\r\n    const [time, setTime] = React.useState(0);\r\n    const [isRunning, setIsRunning] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        let interval;\r\n        if (isRunning){\r\n            interval = setInterval(() => setTime(time+1),10);\r\n        }\r\n        return () => clearInterval(interval);\r\n    },[isRunning, time]);\r\n\r\n    const hour = Math.floor(time / 360000);\r\n    const minute = Math.floor((time % 360000)/6000);\r\n    const seconds = Math.floor((time% 6000)/100);\r\n\r\n    const startAndStop = () => {\r\n        setIsRunning(!isRunning);\r\n    }\r\n\r\n    const Save = () => {\r\n        setTime(0);\r\n    }\r\n\r\n   return (\r\n      <div style={{display: \"flex\"}}>\r\n      <p className={style.stopwatchTime}>\r\n      {hour}:{minute.toString().padStart(2, \"0\")}:\r\n      {seconds.toString().padStart(2, \"0\")}\r\n      </p>\r\n       <div style={{margin: \"30px 3px 0px 5px\"}}>\r\n            <IconButton>\r\n            {isRunning ? \r\n                <PauseIcon onClick={startAndStop} color=\"action\"/> :\r\n                <PlayArrowIcon onClick={startAndStop}/>}\r\n            </IconButton>\r\n        </div>\r\n      </div>\r\n   )\r\n};\r\n\r\nexport default Stopwatch;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}